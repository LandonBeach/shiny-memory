version: '2'
volumes:
  es-storage-volume:
    driver: local
    per_container: true

services:
  es-storage:
    image: rawmind/alpine-volume:0.0.2-1
    environment:
      SERVICE_GID: '1000'
      SERVICE_UID: '1000'
      SERVICE_VOLUME: /usr/share/elasticsearch/data
    network_mode: none
    volumes:
    - es-storage-volume:/usr/share/elasticsearch/data
    labels:
      io.rancher.container.start_once: 'true'

  es-data:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
    mem_limit: 1073741824  # Memory limit in Bytes per instance. It should be AT LEAST double the heap size (ES_JAVA_OPTS)!
    cap_add:
    - IPC_LOCK
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512g  # Heap size per instance to be allocated for Java (32g is the max).
      bootstrap.memory_lock: 'true'
      cluster.name: elasticsearch-cluster  # Name of your Elasticsearch cluster. 
      discovery.zen.ping.unicast.hosts: es-master
      node.data: 'true'
      node.master: 'false'
      node.name: $${HOSTNAME}
      xpack.security.enabled: 'false'
      xpack.watcher.enabled: 'false'
      xpack.monitoring.enabled: 'false'
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    dns_search:
    - elasticsearch.rancher.internal
    volumes_from:
    - es-storage
    labels:
      io.rancher.scheduler.affinity:host_label: es=data-node
      io.rancher.sidekicks: es-storage,es-sysctl
      io.rancher.container.hostname_override: container_name
      io.rancher.scheduler.global: 'true'

  elastalert:
    image: ivankrizsan/elastalert:latest
    environment:
      SET_CONTAINER_TIMEZONE: 'True'
      CONTAINER_TIMEZONE: America/Denver  # Enter your own timezone here.
      ELASTICSEARCH_HOST: es-master.elasticsearch.rancher.internal
    stdin_open: true
    tty: true
    labels:
      io.rancher.container.pull_image: always
      io.rancher.scheduler.affinity:host_label: elastalert=true

  # To avoid vm.max_map_count errors. The host parameter vm.max_map_count will be updated to 2622144.
  es-sysctl:
    privileged: true
    image: rawmind/alpine-sysctl:0.1
    environment:
      SYSCTL_KEY: vm.max_map_count
      SYSCTL_VALUE: '262144'
    network_mode: none
    labels:
      io.rancher.container.start_once: 'true'

  es-client:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
    mem_limit: 1073741824  # Memory limit in Bytes per instance. It should be AT LEAST double the heap size (ES_JAVA_OPTS)!
    cap_add:
    - IPC_LOCK
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m  # Heap size per instance to be allocated for Java.
      bootstrap.memory_lock: 'true'
      cluster.name: elasticsearch-cluster  # Name of your elasticsearch cluster.
      discovery.zen.ping.unicast.hosts: es-master
      node.data: 'false'
      node.master: 'false'
      node.name: $${HOSTNAME}
      xpack.security.enabled: 'false'
      xpack.watcher.enabled: 'false'
      xpack.monitoring.enabled: 'false'
    ulimits:
      memlock:
        hard: -1
        soft: -1
      nofile:
        hard: 65536
        soft: 65536
    dns_search:
    - elasticsearch.rancher.internal
    volumes_from:
    - es-storage
    depends_on:
      - es-master
    labels:
      io.rancher.scheduler.affinity:host_label: es=client-node
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$${stack_name}/$${service_name}
      io.rancher.sidekicks: es-storage,es-sysctl
      io.rancher.container.hostname_override: container_name

  es-master:
    image: docker.elastic.co/elasticsearch/elasticsearch:5.6.5
    mem_limit: 1073741824  # Memory limit in Bytes per instance. It should be AT LEAST double the heap size (ES_JAVA_OPTS)!
    environment:
      ES_JAVA_OPTS: -Xms512m -Xmx512m  # Heap size per instance to be allocated for Java.
      cluster.name: elasticsearch-cluster  # Name of your elasticsearch cluster.
      discovery.zen.minimum_master_nodes: '1'
      discovery.zen.ping.unicast.hosts: es-master
      node.data: 'false'
      node.master: 'true'
      node.name: $$$${HOSTNAME}
      xpack.security.enabled: 'false'
      xpack.monitoring.enabled: 'false'
      xpack.watcher.enabled: 'false'
    stdin_open: true
    dns_search:
    - elasticsearch.rancher.internal
    - es-master.elasticsearch.rancher.internal
    - rancher.internal
    tty: true
    labels:
      io.rancher.scheduler.affinity:container_label_soft_ne: io.rancher.stack_service.name=$$$${stack_name}/$$$${service_name}
      io.rancher.container.hostname_override: container_name
      io.rancher.container.pull_image: always
